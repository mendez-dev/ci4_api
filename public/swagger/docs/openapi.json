{
  "openapi": "3.0.2",
  "info": {
    "title": "Documentación API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3005/"
    }
  ],
  "paths": {
    "/v1/login": {
      "post": {
        "tags": [
          "Autehticación"
        ],
        "summary": "Obtener token de acceso aquí",
        "description": "Verifíca las credenciales de autenticación y retorna un token de acceso, si las credenciales son incorrectas o el usuario está desactivado retornara el mensaje de error correspondiente.",
        "requestBody": {
          "$ref": "#components/requestBodies/Login"
        },
        "responses": {
          "200": {
            "description": "Retorna el token de autenticación",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "required": true,
                      "description": "Bearer token para acceso",
                      "type": "string",
                      "example": "xxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "La petición no se pudo procesar, falta uno o más parámetros en el request body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ErrorResponse"
                },
                "examples": {
                  "parameters": {
                    "summary": "Faltan parámetros en la petición",
                    "value": {
                      "errors": [
                        "El campo contraseña es obligatorio."
                      ]
                    }
                  },
                  "credentials": {
                    "summary": "Credenciales inválidas",
                    "value": {
                      "errors": [
                        "Usuario o contraseña incorrectos."
                      ]
                    }
                  },
                  "disabled": {
                    "summary": "Usuario desactivado",
                    "value": {
                      "errors": [
                        "Usuario desactivado."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/verify": {
      "get": {
        "tags": [
          "Autehticación"
        ],
        "summary": "Verifica el estado del token de acceso y retorna la información del usuario",
        "description": "Verifica el token de acceso enviado en los header como bearerToken y en caso de ser valido retorna la información del usuario, de lo contrario retorna un mensaje de error.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna la información del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          }
        }
      }
    },
    "/v1/user": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Retorna el listado de usuarios paginados",
        "description": "Retorna el listado de usuarios\n### Filtros\nSe puede filtrar por: nombre, apellido, nombre de usuario, correo y por estado.\n### Paginación\nPara retornar los datos paginados se deberá enviar por query params el número de la página que se está solicitando.\n\nSi no se indica el numero de página se retornaran todos los registros.\n### Schemas\nLos datos páginados se retornaran en formato PaginatedResponse, si no se solicitan datos paginados se retornara un\nlistado con todos los registros, para mas información revisar los schemas/modelos del recurso.\n",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": "1",
            "description": "El número de página que se está solicitando."
          },
          {
            "in": "query",
            "name": "records_per_page",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "El número de registros que se requiren por página, por defecto 10."
          },
          {
            "in": "query",
            "name": "firstname",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por nombre (like %query%)"
          },
          {
            "in": "query",
            "name": "user_name",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por nombre de usuario (like %query%)"
          },
          {
            "in": "query",
            "name": "lastname",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por apellido (like %query%)"
          },
          {
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por correo (like %query%)"
          },
          {
            "in": "query",
            "name": "is_active",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filtra resultados por estado"
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "created_at",
            "description": "Indica por cual columna se quieren ordenar los datos"
          },
          {
            "in": "query",
            "name": "order_by",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "example": "ASC",
            "description": "Indica el tipo de ordenamiento de los datos ascendente o descendente"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna la información del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#components/schemas/User"
                          }
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "página actual"
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "páginas totales"
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#components/schemas/User"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Guardar usuarios en la base de datos",
        "description": "Valida que los datos del usuario enviados en formato json sean correctos y los guarda en la base de datos",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "$ref": "#components/requestBodies/UserCreate"
        },
        "responses": {
          "200": {
            "description": "Usuario registrado con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      }
    },
    "/v1/user/{id}": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Retorna la información de un usuario",
        "description": "Retorna la información de un unico usuario enviando su id en el path",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Información del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Actualiza la información de un usuario en la base de datos",
        "description": "Verifica que los datos enviados en formato json sean correctos y los actualiza en la base de datos",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del usuario"
          }
        ],
        "requestBody": {
          "$ref": "#components/requestBodies/UserUpdate"
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Elimina un usuario de la base de datos",
        "description": "Usa soft delete para eliminar el usuario de la base de datos registrando quien lo eliminó y la fecha y hora de la acción",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario eliminado con éxito"
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      }
    },
    "/v1/user/{id}/enable": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Cambia el estado del usuario a activo",
        "description": "Cambia el estado del usuario a activo para que pueda acceder al sistema.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario activado con éxito"
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      }
    },
    "/v1/user/{id}/disable": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Cambia el estado del usuario a inactivo",
        "description": "Cambia el estado del usuario a inactivo para que ya no pueda acceder al sistama.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario desactivado con éxito"
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      }
    },
    "/v1/user/{id}/password": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Actualiza la contraseña de un usuario",
        "description": "Actualiza la contraseña de un usuario.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del usuario"
          }
        ],
        "requestBody": {
          "description": "Objeto json con la nueva contraseña",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario activado con éxito"
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      }
    },
    "/v1/group": {
      "get": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Retorna el listado de grupos paginados",
        "description": "Retorna el listado de grupos\n### Filtros\nSe puede filtrar por: nombre, descripcion y estado.\n### Paginación\nPara retornar los datos paginados se deberá enviar por query params el número de la página que se está solicitando.\n\nSi no se indica el numero de página se retornaran todos los registros.\n### Schemas\nLos datos páginados se retornaran en formato PaginatedResponse, si no se solicitan datos paginados se retornara un\nlistado con todos los registros, para mas información revisar los schemas/modelos del recurso.\n",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": "1",
            "description": "El número de página que se está solicitando, es requerido para páginar"
          },
          {
            "in": "query",
            "name": "records_per_page",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "El número de registros que se requiren por página, por defecto 10."
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por nombre (like %query%)"
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por descripcion (like %query%)"
          },
          {
            "in": "query",
            "name": "is_active",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filtra resultados por estado"
          }
        ],
        "responses": {
          "200": {
            "description": "Listado de grupos paginados",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#components/schemas/Group"
                          }
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "página actual"
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "páginas totales"
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#components/schemas/Permission"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Crea un nuevo grupo",
        "description": "Crea un nuevo grupo\n### Schemas\nPara crear un nuevo grupo se deberá enviar un objeto con los datos del grupo, para mas información revisar los schemas/modelos del recurso.\n",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "$ref": "#components/requestBodies/Group"
        },
        "responses": {
          "201": {
            "description": "Grupo creado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      }
    },
    "/v1/group/{id}": {
      "get": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Retorna la información de un grupo",
        "description": "Retorna la información de un unico grupo enviando su id en el path",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del grupo"
          }
        ],
        "responses": {
          "200": {
            "description": "Información del grupo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/Group"
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Actualiza la información de un grupo en la base de datos",
        "description": "Verifica que los datos enviados en formato json sean correctos y los actualiza en la base de datos",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del grupo"
          }
        ],
        "requestBody": {
          "$ref": "#components/requestBodies/Group"
        },
        "responses": {
          "200": {
            "description": "Grupo actualizado con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Elimina un grupo de la base de datos",
        "description": "Usa soft delete para no eliminar el registro de la base de datos",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del grupo"
          }
        ],
        "responses": {
          "200": {
            "description": "Grupo eliminado con éxito"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      }
    },
    "/v1/group/{id}/enable": {
      "put": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Cambia el estado del grupo a activo",
        "description": "Cambia el estado del grupo a activo para que pueda que los usuarios que pertenezcan a él puedan acceder al sistema.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del grupo"
          }
        ],
        "responses": {
          "200": {
            "description": "Grupo activado con éxito"
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      }
    },
    "/v1/group/{id}/disable": {
      "put": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Cambia el estado del grupo a inactivo",
        "description": "Cambia el estado del grupo a inactivo para que los usuarios que pertenezcan a él no puedan acceder al sistema.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del grupo"
          }
        ],
        "responses": {
          "200": {
            "description": "Grupo desactivado con éxito"
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      }
    },
    "/v1/group/{id}/permissions": {
      "get": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Obtiene los permisos de un grupo",
        "description": "Obtiene los permisos de un grupo",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del grupo"
          }
        ],
        "responses": {
          "200": {
            "description": "Grupo desactivado con éxito"
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Asigna permisos a un grupo",
        "description": "Asigna permisos a un grupo, recibe un array con los id de los permisos a asignar y verifica que existan en la base de datos y los asigna al grupo",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "id del grupo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permisos asignados con éxito"
          },
          "400": {
            "$ref": "#components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          }
        }
      }
    },
    "/v1/permission": {
      "get": {
        "tags": [
          "Grupos y permisos"
        ],
        "summary": "Retorna el listado de permisos paginados",
        "description": "Retorna el listado de permisos\n### Filtros\nSe puede filtrar por: nombre, etiqueta, descripcion, icono, permiso padre y estado.\n### Paginación\nPara retornar los datos paginados se deberá enviar por query params el número de la página que se está solicitando.\n\nSi no se indica el numero de página se retornaran todos los registros.\n### Schemas\nLos datos páginados se retornaran en formato PaginatedResponse, si no se solicitan datos paginados se retornara un\nlistado con todos los registros, para mas información revisar los schemas/modelos del recurso.\n",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": "1",
            "description": "El número de página que se está solicitando, es requerido para páginar"
          },
          {
            "in": "query",
            "name": "records_per_page",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "El número de registros que se requiren por página, por defecto 10."
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por nombre (like %query%)"
          },
          {
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por etiqueta (like %query%)"
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por descripcion (like %query%)"
          },
          {
            "in": "query",
            "name": "icon",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por icono (like %query%)"
          },
          {
            "in": "query",
            "name": "depends_on",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtra resultados por permiso padre (like %query%)"
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "WEB",
                "MOBILE"
              ]
            }
          },
          {
            "in": "query",
            "name": "is_active",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filtra resultados por estado"
          }
        ],
        "responses": {
          "200": {
            "description": "Listado de permisos paginados",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#components/schemas/Permission"
                          }
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "página actual"
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "páginas totales"
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#components/schemas/Permission"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      }
    },
    "/v1/route": {
      "get": {
        "tags": [
          "Rutas"
        ],
        "summary": "Retorna el listado de rutas",
        "description": "Retorna el listado de rutas\n### Filtros\nSe puede filtrar por: tipo\n",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "WEB",
                "MOBILE"
              ]
            },
            "description": "Filtra resultados por tipo"
          }
        ],
        "responses": {
          "200": {
            "description": "Listado de rutas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#components/schemas/Route"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      }
    },
    "/v1/sync/resources": {
      "get": {
        "tags": [
          "Sincronización de datos"
        ],
        "summary": "Obtiene el listado de recursos que la aplicación puede sincronizar",
        "description": "Este es el primer paso para realizar una descarga de datos a la aplicación móvil, se debe consultar este endpoint para obtener el listado de recursos que la aplicación puede sincronizar.\n\n### A continuación se listan los pasos para realizar una descarga de datos:\n\n1. Consultar este endpoint para obtener el listado de recursos que la aplicación puede sincronizar.\n2. Consultar el endpoint de lotes para obtener el número de lotes que se deben descargar por cada recurso.\n3. Descargar cada lote de cada recurso desde el endpoint de descarga.\n",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna el listado de recursos que la aplicación puede sincronizar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "customers"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      }
    },
    "/v1/sync/batchs": {
      "get": {
        "tags": [
          "Sincronización de datos"
        ],
        "summary": "Obtiene la cantidad de lotes que se deben descargar para sincronizar todos los registros de la tabla",
        "description": "Obtiene la cantidad de lotes que se deben descargar para sincronizar todos los registros del recurso indicado.\n\nLa cantidad obtenida determina cuantas veces se debe llamar al endpoint de descarga de lotes para sincronizar todos los registros del recurso.\n",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resource",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "El nombre del recurso que se desea sincronizar",
            "example": "user"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "El número de registros que se requieren por lote, por defecto 1000.",
            "example": "1000"
          },
          {
            "in": "query",
            "name": "last_update",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filtra los registros que se deben sincronizar por fecha de actualización"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna la cantidad de lotes que se deben descargar para sincronizar todos los registros de la tabla",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_batches": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      }
    },
    "/v1/sync/download": {
      "get": {
        "tags": [
          "Sincronización de datos"
        ],
        "summary": "Descarga un lote de registros de una tabla",
        "description": "Descarga un lote de registros de una tabla\n\nEl lote de registros se descarga en formato JSON cada recurso tiene un formato diferente, por lo que se debe consultar la documentación de cada recurso para conocer el formato de los datos.\n",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resource",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "El nombre del recurso que se desea sincronizar",
            "example": "user"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "El número de registros que se requieren por lote, por defecto 1000.",
            "example": "1000"
          },
          {
            "in": "query",
            "name": "last_update",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filtra los registros que se deben sincronizar por fecha de actualización"
          },
          {
            "in": "query",
            "name": "batch",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "El número de lote que se desea descargar",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna un lote de registros de una tabla",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#components/responses/404NotFound"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "id_user",
          "id_user_group",
          "firstname",
          "lastname",
          "username",
          "email"
        ],
        "properties": {
          "id_user": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "id_user_group": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "picture": {
            "type": "string",
            "description": "path de la fotografia del usuario"
          },
          "is_active": {
            "type": "boolean"
          },
          "group": {
            "type": "object",
            "required": [
              "id_user_group",
              "name",
              "description"
            ],
            "properties": {
              "id_user_group": {
                "type": "string",
                "description": "uuidv4 string con longitud de 36 caracteres"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "is_active": {
                "type": "boolean"
              },
              "created_by": {
                "type": "string",
                "description": "uuidv4 string con longitud de 36 caracteres"
              },
              "created_at": {
                "type": "string"
              },
              "updated_by": {
                "type": "string",
                "description": "uuidv4 string con longitud de 36 caracteres"
              },
              "updated_at": {
                "type": "string"
              },
              "deleted_by": {
                "type": "string",
                "description": "uuidv4 string con longitud de 36 caracteres"
              },
              "deleted_at": {
                "type": "string"
              }
            }
          },
          "created_by": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "created_at": {
            "type": "string"
          },
          "updated_by": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_by": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "deleted_at": {
            "type": "string"
          }
        }
      },
      "DateTime": {
        "type": "object",
        "required": [
          "date",
          "timezone_type",
          "timezone"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "timezone_type": {
            "type": "integer"
          },
          "timezone": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Descripción del error"
            ]
          }
        }
      },
      "Permission": {
        "type": "object",
        "required": [
          "name",
          "label",
          "description",
          "icon"
        ],
        "properties": {
          "id_permission": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "group_tag": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "description": "icono de font awesome"
          },
          "depends_on": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "ALL",
              "WEB",
              "MOBILE"
            ]
          },
          "is_active": {
            "type": "boolean"
          },
          "created_by": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          }
        }
      },
      "Group": {
        "type": "object",
        "required": [
          "id_user_group",
          "name",
          "description"
        ],
        "properties": {
          "id_user_group": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "created_by": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "created_at": {
            "type": "string"
          },
          "updated_by": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_by": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "deleted_at": {
            "type": "string"
          }
        }
      },
      "Route": {
        "type": "object",
        "required": [
          "label",
          "name",
          "path",
          "icon",
          "priority",
          "type",
          "show_in_menu",
          "is_active"
        ],
        "properties": {
          "id_route": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "id_parent_route": {
            "type": "string",
            "description": "uuidv4 string con longitud de 36 caracteres"
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "ALL",
              "WEB",
              "MOBILE"
            ]
          },
          "show_in_menu": {
            "type": "boolean"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "is_active": {
            "type": "boolean"
          },
          "created_by": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "deleted_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "description": "Token de acceso, se puede generar en /login",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "requestBodies": {
      "UserCreate": {
        "description": "Objeto json con la información para crear un usuario",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "id_user_group",
                "firstname",
                "lastname",
                "username",
                "email",
                "password"
              ],
              "properties": {
                "id_user_group": {
                  "type": "string",
                  "description": "uuidv4 string con longitud de 36 caracteres"
                },
                "firstname": {
                  "type": "string",
                  "maxLength": 100,
                  "example": "Juan"
                },
                "lastname": {
                  "type": "string",
                  "maxLength": 100,
                  "example": "Pérez"
                },
                "username": {
                  "type": "string",
                  "maxLength": 30,
                  "example": "juan_perez"
                },
                "email": {
                  "type": "string",
                  "maxLength": 50,
                  "format": "email"
                },
                "password": {
                  "type": "string",
                  "minLength": 6
                }
              }
            }
          }
        }
      },
      "UserUpdate": {
        "description": "Objeto json con la información para crear un usuario",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "id_user_group",
                "firstname",
                "lastname",
                "username",
                "email"
              ],
              "properties": {
                "id_user_group": {
                  "type": "string",
                  "description": "uuidv4 string con longitud de 36 caracteres"
                },
                "firstname": {
                  "type": "string",
                  "maxLength": 100,
                  "example": "Juan"
                },
                "lastname": {
                  "type": "string",
                  "maxLength": 100,
                  "example": "Pérez"
                },
                "username": {
                  "type": "string",
                  "maxLength": 30,
                  "example": "juan_perez"
                },
                "email": {
                  "type": "string",
                  "maxLength": 50,
                  "format": "email"
                }
              }
            }
          }
        }
      },
      "Login": {
        "description": "Objeto json con la información para iniciar sersión",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "username",
                "password"
              ],
              "properties": {
                "username": {
                  "example": "admin",
                  "type": "string"
                },
                "password": {
                  "type": "string",
                  "example": "admin"
                }
              }
            }
          }
        }
      },
      "Group": {
        "description": "Objeto json con la información para crear un grupo",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 50,
                  "example": "Administradores"
                },
                "description": {
                  "type": "string",
                  "maxLength": 250,
                  "example": "Grupo de administradores"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "401Unauthorized": {
        "description": "No autenticado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#components/schemas/ErrorResponse"
            },
            "examples": {
              "no_token": {
                "summary": "No se envió un token válido",
                "value": {
                  "errors": [
                    "Unautorized"
                  ]
                }
              },
              "credentials": {
                "summary": "Token expirado",
                "value": {
                  "errors": [
                    "expired token"
                  ]
                }
              },
              "disabled": {
                "summary": "Usuario desactivado",
                "value": {
                  "errors": [
                    "Usuario desactivado."
                  ]
                }
              }
            }
          }
        }
      },
      "403Forbidden": {
        "description": "Prohibido",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#components/schemas/ErrorResponse"
            },
            "examples": {
              "forbidden": {
                "summary": "Sin permisos para realizar esta acción",
                "value": {
                  "errors": [
                    "No tienes permisos para realizar esta acción"
                  ]
                }
              }
            }
          }
        }
      },
      "404NotFound": {
        "description": "Recurso no encontrado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#components/schemas/ErrorResponse"
            },
            "examples": {
              "not_found": {
                "summary": "No se encontraron resultados que coincidan con los parametros de busqueda",
                "value": {
                  "errors": [
                    "No se encontraron registros"
                  ]
                }
              }
            }
          }
        }
      },
      "400BadRequest": {
        "description": "La petición no se pudo procesar, falta uno o más parámetros o los parametros son inválidos",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#components/schemas/ErrorResponse"
            },
            "examples": {
              "request_parameters": {
                "summary": "Faltan parámetros en el request",
                "value": {
                  "errors": [
                    "El campo x es obligatorio."
                  ]
                }
              },
              "path_parameters": {
                "summary": "Id inválido",
                "value": {
                  "errors": [
                    "No existe un registro con el id enviado."
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}