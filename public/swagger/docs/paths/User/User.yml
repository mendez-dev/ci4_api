get:
  tags:
    - Usuarios
  summary: Retorna el listado de usuarios paginados
  description: |
    Retorna el listado de usuarios
    ### Filtros
    Se puede filtrar por: nombre, apellido, nombre de usuario, correo y por estado.
    ### Paginación
    Para retornar los datos paginados se deberá enviar por query params el número de la página que se está solicitando.

    Si no se indica el numero de página se retornaran todos los registros.
    ### Schemas
    Los datos páginados se retornaran en formato PaginatedResponse, si no se solicitan datos paginados se retornara un
    listado con todos los registros, para mas información revisar los schemas/modelos del recurso.
  security:
    - bearerToken: []
  parameters:
    - in: query
      name: page
      schema:
        type: integer
      example: "1"
      description: "El número de página que se está solicitando."
    - in: query
      name: records_per_page
      required: false
      schema:
        type: integer
      description: "El número de registros que se requiren por página, por defecto 10."
    - in: query
      name: firstname
      required: false
      schema:
        type: string
      description: "Filtra resultados por nombre (like %query%)"
    - in: query
      name: user_name
      required: false
      schema:
        type: string
      description: "Filtra resultados por nombre de usuario (like %query%)"
    - in: query
      name: lastname
      required: false
      schema:
        type: string
      description: "Filtra resultados por apellido (like %query%)"
    - in: query
      name: email
      required: false
      schema:
        type: string
      description: "Filtra resultados por correo (like %query%)"
    - in: query
      name: is_active
      required: false
      schema:
        type: boolean
      description: "Filtra resultados por estado"
  responses:
    200:
      description: "Retorna la información del usuario"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#components/schemas/User"
              current_page:
                type: integer
              total_pages:
                type: integer
    401:
      $ref: "#components/responses/401Unauthorized"
    403:
      $ref: "#components/responses/403Forbidden"
    404:
      $ref: "#components/responses/404NotFound"

post:
  tags:
    - Usuarios
  summary: Guardar usuarios en la base de datos
  description: Valida que los datos del usuario enviados en formato json sean correctos y los guarda en la base de datos
  security:
    - bearerToken: []
  requestBody:
    $ref: "#components/requestBodies/UserCreate"
  responses:
    200:
      description: "Usuario registrado con éxito"
      content:
        application/json:
          schema:
            $ref: "#components/schemas/User"
    401:
      $ref: "#components/responses/401Unauthorized"
    403:
      $ref: "#components/responses/403Forbidden"
    400:
      $ref: "#components/responses/400BadRequest"
